# Generated by Django 5.2.6 on 2025-09-18 16:05

import django.core.validators
import django.db.models.deletion
import pathlib
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('dob', models.DateField(null=True)),
                ('height', models.DecimalField(decimal_places=2, max_digits=3, null=True)),
                ('gender', models.CharField(max_length=50, null=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='my_inventory.category')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('total_quantity', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)])),
                ('available_quantity', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('used_quantity', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(null=True)),
                ('updated_dt', models.DateTimeField()),
                ('acquired_dt', models.DateTimeField(null=True)),
                ('expire_dt', models.DateTimeField(null=True)),
                ('lifespan', models.DurationField(null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='my_inventory.category')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='my_inventory.group')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to=pathlib.PurePosixPath('/home/rhinocanine/dev/python/my_inventory_project/resource/image'))),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_inventory.item')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('updated_dt', models.DateTimeField()),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_inventory.item')),
            ],
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_dt', models.DateTimeField()),
                ('reoccuring', models.BooleanField()),
                ('by_day', models.BooleanField(null=True)),
                ('by_week', models.BooleanField(null=True)),
                ('days', models.JSONField(default=list, null=True)),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_inventory.note')),
            ],
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wisdom', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('strength', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('intelligence', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('personality', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('endurance', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('luck', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('agility', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_inventory.character')),
            ],
        ),
        migrations.CreateModel(
            name='WebSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('name', models.CharField(max_length=200, null=True)),
                ('description', models.TextField(null=True)),
                ('updated_dt', models.DateTimeField()),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_inventory.item')),
            ],
        ),
    ]
